C++ - Модуль 05
Повторение и исключения

Упражнение 00: Мамочка, когда я вырасту, я хочу стать бюрократом!

Обратите внимание, что классы исключений не обязательно должны быть разработаны в
ортодоксальной канонической форме. Но все остальные классы должны.
Давайте создадим искусственный кошмар из кабинетов, коридоров, бланков и очередей.
Звучит забавно? Нет? Очень плохо.
Во-первых, начнем с самого маленького винтика в этой огромной бюрократической машине: Бюрократа.
Бюрократ должен иметь:
- Постоянное имя.
- И класс, который варьируется от 1 (самый высокий возможный класс) до 150 (самый низкий возможный класс).
оценка).
Любая попытка создать Бюрократа, используя недопустимый класс, должна вызвать исключение:
либо Bureaucrat::GradeTooHighException, либо Bureaucrat::GradeTooLowException.

Вы предоставите геттеры для обоих этих атрибутов: getName() и getGrade(). Реализуйте также две функции-члена для увеличения или уменьшения класса бюрократа. Если
класс выходит за пределы диапазона, обе функции будут выбрасывать те же исключения, что и конструктор.
Помните. Поскольку 1 класс является самым высоким, а 150 - самым низким,
увеличение класса 3 должно дать бюрократу класс 2.

Выброшенные исключения должны быть перехватываемыми с помощью блоков try и catch:

try
{
/* do some stuff with bureaucrats */
}
catch (std::exception & e)
{
/* handl

Вы реализуете перегрузку оператора вставки (""), чтобы вывести что-то вроде
(без угловых скобок):
<имя>, класс бюрократа <класс>.
Как обычно, сделайте несколько тестов, чтобы доказать, что все работает так, как ожидается.